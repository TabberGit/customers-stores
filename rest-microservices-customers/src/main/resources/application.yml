server:
  port: 9000

spring:
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
#    password: nmwrKv6vG8RIKk6R8MnnIQ==
    password: ${RABBITMQ_PASSWORD}
  cloud:
    stream:
       bindings:
         springCloudBusInput:
           group: customers.${spring.cloud.client.hostname}.${server.port}

#endpoints:
#  restart:
#    enabled: true
#  shutdown:
#    enabled: true
#  health:
#    sensitive: false

integration:
  stores:
    uri: http://localhost:8081
    test: '{cipher}316f8cdbb776c23e679bf209014788a6eab7522f48f97114328c2c9388e6b3c1'

stores:
  ribbon:
    ServerListRefreshInterval: 1000

##
## If we want to run off of the defaults in a given context, the three of the following properties must be unique and must agree
##
## eureka.instance.instanceId=127.0.0.1:customers:8080
## eureka.instance.ip-address=127.0.0.1
## eureka.instance.hostname=127.0.0.1
##
## NOTE: The PORTS must be unique across various ips representing the same box! If not, Hystrix will not function properly.
## Without a unique ip/port Eureka/Hystrix will not perform as expected on a dev box.  (ie, just having localhost:9000 and localhost:9001 will not work;
##              instead, use localhost:9000 and 127.0.0.1:9001)
##
##

eureka:
  instance:
    instance-id: ${HOST_IP:spring.cloud.client.hostname}:customers:${HOST_PORT:9000}
    ip-address: ${HOST_IP:spring.cloud.client.hostname}
    hostname: ${HOST_IP:spring.cloud.client.hostname}
    leaseRenewalIntervalInSeconds: 10
    non-secure-port: ${HOST_PORT:${server.port}}
    status-page-url: http://${HOST_IP}:${eureka.instance.non-secure-port}/info
    health-check-url: http://${HOST_IP}:${eureka.instance.non-secure-port}/health
    metadata-map: {"id":"testme"}
  client:
    service-url:
      defaultZone: http://${EUREKA_IP_ADDRESS}:${eureka.client.eureka-server-port}/eureka/
    region: default
    eureka-server-port: 8761
    registryFetchIntervalSeconds: 5
    availabilityZones: 
      default: ${APPLICATION_DOMAIN:${DOMAIN:defaultZone}}

# For demo only allow more hystrix connections
hystrix:
  stream:
    maxConcurrentConnections: 20
    bus:
      enabled: true

logging:
  level:
    com.netflix.discovery: 'OFF'

---
spring:
  profiles: mysql
  datasource:
    url: jdbc:mysql://${MYSQL_HOST_ADDR}/test
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.jdbc.Driver
  jpa:
    hibernate:
#      ddl-auto: create-drop
#      ddl-auto: create
      ddl-auto: none
